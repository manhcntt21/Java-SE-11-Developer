*******************************
snippet-01-ExecutorExample.java
*******************************


/*
The Learn Programming Academy
Java SE 11 Developer 1Z0-819 OCP Course - Part 2
Section 11: Concurrency
Topic:  Using ExecutorService
*/

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

// Class tests SingleThreadedExecutorService with two threads
public class ExecutorExample {

    // main method
    public static void main(String[] args) throws InterruptedException {

        // Get new service using Executors class, static factory method
        ExecutorService executorService
                = Executors.newSingleThreadExecutor();

        // Fire and Forget method of execution:  ThreadOne
        executorService.execute(ExecutorExample::doSomethingThreadOne);

        // Fire and Forget method of execution: ThreadTwo
        executorService.execute(ExecutorExample::doSomethingThreadTwo);

        // Output data from the main thread, demonstrating that
        // threads are running asynchronously.
        for (int i = 1; i < 11; i++) {
            System.out.println("Main thread: iteration " + i);
            Thread.sleep(250);

        }

        // Shutdown the service
        executorService.shutdown();
    }

    // Method will run asynchronously, printing numbers 1-5
    private static void doSomethingThreadOne() {
        for (int i = 1; i <= 5; i++) {

            System.out.println("--> First Thread: iteration " + i);
            try {
                Thread.sleep(250);
            } catch (InterruptedException iex) {
                break;
            }
        }
    }

    // Method will run asynchronously, printing numbers 10-5
    private static void doSomethingThreadTwo() {
        for (int i = 10; i > 5; i--) {

            System.out.println("--> Second thread: iteration " + i);
            try {
                Thread.sleep(250);
            } catch (InterruptedException iex) {
                break;
            }
        }
    }
}


*******************************
snippet-02-ExecutorExample.java
*******************************


for (int i = 1; i < 11; i++) {
    System.out.println("Main thread: iteration " + i);
    if (i == 10) executorService.execute(ExecutorExample::doSomethingThreadTwo);
    Thread.sleep(250);
}


*******************************
snippet-03-ExecutorExample.java
*******************************


System.out.println("All done!!");


*******************************
snippet-04-ExecutorExample.java
*******************************


executorService.awaitTermination(2, TimeUnit.SECONDS);


*******************************
snippet-05-ExecutorExample.java
*******************************


for (int i = 1; i < 11; i++) {
    System.out.println("Main thread: iteration " + i);
    Thread.sleep(250);
}


*******************************
snippet-06-ExecutorExample.java
*******************************


// Fire and Forget method of execution:  ThreadOne
executorService.execute(ExecutorExample::doSomethingThreadOne);

// Fire and Forget method of execution: ThreadTwo
executorService.submit(ExecutorExample::doSomethingThreadTwo);


