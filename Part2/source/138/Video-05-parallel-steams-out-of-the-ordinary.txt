******************************
snippet-01-ParallelExtras.java
******************************


/*
The Learn Programming Academy
Java SE 11 Developer 1Z0-819 OCP Course - Part 2
Section 12:  Parallel Stream
Topic:  Collect and Reduce
*/

import java.util.Set;
import java.util.TreeSet;
import java.util.stream.Collectors;

public class ParallelExtras {
    public static void main(String[] args) {

        Set<String> set = new TreeSet<>(Set.of("b", "c", "d"));

        // Using reduce with String
        String firstResult = set
                .stream()
                .reduce(String::concat)
                // reduce returns Optional,
                // need to use get() to get value
                .get();

        System.out.println("firstResult = " + firstResult);

        // Using collect with String
        String secondResult = set
                .stream()
                // collect requires Collector argument
                .collect(Collectors.joining());

        System.out.println("secondResult = " + secondResult);
    }
}


******************************
snippet-02-ParallelExtras.java
******************************


String firstResult = set
        .parallelStream()


******************************
snippet-03-ParallelExtras.java
******************************


String secondResult = set
        .parallelStream()


******************************
snippet-04-ParallelExtras.java
******************************


// Using reduce with String
String firstResult = set
        .stream()
        // Requires Identity(String here), and BinaryOperator
        .reduce("", String::concat);


******************************
snippet-05-ParallelExtras.java
******************************


// Using reduce with String
String firstResult = set
        .stream()
        // Requires Identity(String), BiFunction, BinaryOperator
        .reduce("", String::concat, String::concat);


******************************
snippet-06-ParallelExtras.java
******************************


// Using collect with String
String secondResult = set
        .stream()
        // collect requires Supplier, BiConsumer, BiConsumer
        .collect("", String::concat, String::concat);


******************************
snippet-07-ParallelExtras.java
******************************


// Using collect with String
String secondResult = set
        .stream()
        // collect requires Supplier, BiConsumer, BiConsumer
        .collect(String::new, String::concat, String::concat);


******************************
snippet-08-ParallelExtras.java
******************************


// Using reduce with StringBuilder
StringBuilder firstResult = set
        .stream()
        .map(s -> new StringBuilder(s))
        // Requires Identity(StringBuilder), BiFunction, BinaryOperator
        .reduce(new StringBuilder(),
                (a, b) -> a.append(b),
                (a, b) -> a.append(b));


******************************
snippet-09-ParallelExtras.java
******************************


// Using collect with StringBuilder
StringBuilder secondResult = set
        .stream()
        .map(s -> new StringBuilder(s))
        // collect requires Supplier, BiConsumer, BiConsumer
        .collect(StringBuilder::new,
                (a, b) -> a.append(b),
                (a, b) -> a.append(b));


