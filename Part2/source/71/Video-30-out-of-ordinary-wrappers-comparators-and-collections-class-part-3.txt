********************************
snippet-01-GenericContainer.java
********************************


/*
The Learn Programming Academy
Java SE 11 Developer 1Z0-819 OCP Course - Part 2
Section 4: Generics and Collections
Topic:  Generics & Wildcards
*/

import java.util.ArrayList;
import java.util.List;

public class GenericContainer {

    // Container wraps an ArrayList
    List wrappedList;

    // Constructor
    GenericContainer(List wrappedList) {
        this.wrappedList = wrappedList;
    }

    // Wrap get method with custom one
    public Object myGet(int index) {
        return wrappedList.get(index);
    }

    // Wrap add method with custom one
    public void myAdd(Object o) {
        wrappedList.add(o);
    }

    // Wrap ArrayList.toString()
    public String toString() {
        return wrappedList.toString();
    }

    // Main method declares and constructs an instance
    public static void main(String[] args) {
        List l = new ArrayList();
        GenericContainer g = new GenericContainer(l);

        // Add elements to wrapped List
        g.myAdd("hi");
        g.myAdd(10);

        // Get first element from wrapped List
        Object o = g.myGet(0);
        System.out.println("Element 0 = " + o);

        // Print List
        System.out.println("Wrapped List = " + g);
    }

}



********************************
snippet-02-GenericContainer.java
********************************


public class GenericContainer<T> {


********************************
snippet-03-GenericContainer.java
********************************


GenericContainer<CharSequence> g = new GenericContainer<>(l);


********************************
snippet-04-GenericContainer.java
********************************


// Container wraps an ArrayList
List<T> wrappedList;


********************************
snippet-05-GenericContainer.java
********************************


// Container wraps an ArrayList
List<? super T> wrappedList ;

// Constructor
GenericContainer(List<? super T> wrappedList) {
    this.wrappedList = wrappedList;
}


********************************
snippet-06-GenericContainer.java
********************************


List<CharSequence> l = new ArrayList<CharSequence>();
GenericContainer<CharSequence> g =
        new GenericContainer<>(l);


********************************
snippet-07-GenericContainer.java
********************************


// Wrap add method with custom one
public void myAdd(T o) {
    wrappedList.add(o);
}


********************************
snippet-08-GenericContainer.java
********************************


g.myAdd(10);


********************************
snippet-09-GenericContainer.java
********************************


// Wrap get method with custom one
public T myGet(int index) {
    return wrappedList.get(index);
}


********************************
snippet-10-GenericContainer.java
********************************


// Container wraps an ArrayList
List<? extends T> wrappedList;

// Constructor
GenericContainer(List<? extends T> wrappedList) {
    this.wrappedList = wrappedList;
}  


********************************
snippet-11-GenericContainer.java
********************************


List<String> l = new ArrayList<>();
GenericContainer<CharSequence> g = new GenericContainer<>(l);


********************************
snippet-12-GenericContainer.java
********************************


// Wrap get method with custom one
public T myGet(int index) {
    return wrappedList.get(index);
}

// Wrap add method with custom one
public void myAdd(T o) {
    wrappedList.add(o);
}


********************************
snippet-13-GenericContainer.java
********************************


// Container wraps an ArrayList
List<T> wrappedList ;

// Constructor
GenericContainer(List<T> wrappedList) {
    this.wrappedList = wrappedList;
}


********************************
snippet-14-GenericContainer.java
********************************


List<CharSequence> l = new ArrayList<>();
GenericContainer<CharSequence> g = new GenericContainer<>(l);


********************************
snippet-15-GenericContainer.java
********************************


List<?> wrappedList ;
List<Object> wrappedList ;
List<? extends T> wrappedList ;
List<? super T> wrappedList ;
List wrappedList ;


********************************
snippet-16-GenericContainer.java
********************************


// Container wraps an ArrayList
List<? super T> wrappedList ;

// Constructor
GenericContainer(List<? super T> wrappedList) {
    this.wrappedList = wrappedList;
}


********************************
snippet-17-GenericContainer.java
********************************


// Wrap get method with custom one
public T myGet(int index) {
    return (T) wrappedList.get(index);
}


********************************
snippet-18-GenericContainer.java
********************************

// Main method declares and constructs an instance
public static void main(String[] args) {
    List<CharSequence> l = new ArrayList<>(
            List.of(new StringBuilder("bye")));
    GenericContainer<String> g = new GenericContainer<>(l);

    // Add elements to wrapped List
    g.myAdd("hi");

    // Get first element from wrapped List
    String o = g.myGet(0);
