****************************************
snippet-02-LocaleFormattingDateTime.java
****************************************


Locale.setDefault(Locale.FRANCE);


****************************************
snippet-03-LocaleFormattingDateTime.java
****************************************


// Print date information using SimpleDateFormat
public static void printDateSimpleDateFormat(Date date) {

    System.out.println("--------- SimpleDateFormat ---------");
    DateFormat dateFormatter = new SimpleDateFormat("MM DD YY");
    // formatter.setTimeZone(TimeZone.getTimeZone("PST"));

    // MM prints month in year as 0 padded number
    // DD is day in the year, not day in the month (d)
    // YY is the year
    System.out.println(MessageFormat.format("{0}  = {1}",
            "SimpleDateFormat(\"MM DD YY\")", dateFormatter.format(date)));

    // MM prints month in year as number, 0 left-pads the number
    // dd prints day in the month as anumber, 0 left-pads the number
    // YY is the year
    dateFormatter = new SimpleDateFormat("MM dd YY");
    System.out.println(MessageFormat.format("{0}  = {1}",
            "SimpleDateFormat(\"MM dd YY\")", dateFormatter.format(date)));

    //This includes the time
    // hh prints hour, 0 left-padded
    // mm print minute in the hour, 0 left-padded
    // a represents am/pm
    // zz represents time zone
    dateFormatter = new SimpleDateFormat("MM dd YY hh:mm a zz");

    // Setting time zone.
    dateFormatter.setTimeZone(TimeZone.getTimeZone("EST"));
    System.out.println(MessageFormat.format("{0}  = {1}",
            "SimpleDateFormat(\"MM/dd/YY hh:mm zz\")", dateFormatter.format(date)));
}


****************************************
snippet-04-LocaleFormattingDateTime.java
****************************************


printDateSimpleDateFormat(date);


****************************************
snippet-05-LocaleFormattingDateTime.java
****************************************


// Using LocalDateTime.of, LocalDate.of and LocalTime.of to create
// Date/Time variables
public static void creatingDateTimeVariables(Date date) {
    System.out.println("--------- DateTimeFormatter ---------");

    // Creating a date & time variable down to the nanosecond
    // This is the most specific use of LocalDateTime.of
    // Year, Month, Day of Month, Hour, Minute, Second, NanoSecond
    LocalDateTime specificDateTime =
            LocalDateTime.of(2020, 9, 17, 1, 53, 23, 55);

    // Creating a date & time variable using the Least Specific way
    // Year, Month, Day, Hour, Minute
    specificDateTime =
            LocalDateTime.of(2020, Month.SEPTEMBER, 17, 10, 30);

    // Create just a LocalDate variable instance...
    LocalDate specificDate = LocalDate.of(2020, 9, 17);

    // Alternately, for a date, you can specify day of the year
    specificDate = LocalDate.ofYearDay(2025, 182);

    // Creating just LocalTime variable instance: 
    // Most Specific - Hour, Minutes, Seconds, Nanoseconds
    LocalTime specificTime = LocalTime.of(12, 30, 0, 0);

    // Least Specific - Hour, Minutes
    specificTime = LocalTime.of(12, 30);

    // Use FormatStyle from the FormatStyle.Enum
    DateTimeFormatter dformatter =
            DateTimeFormatter.ofLocalizedDate(FormatStyle.SHORT);
    System.out.println(dformatter.format(specificDate));

    // Create a patterned formatter and specify a different locale
    dformatter =
            DateTimeFormatter.ofPattern("yyy-MMM-dd", Locale.US);

    // Print LocalDate using the Locale specific formatter
    System.out.println(dformatter.format(specificDate));

    // Print LocalTime using the Locale specific formatter
    System.out.println(dformatter.format(specificDateTime));

    // Print LocalTimeDate using predefined formatter, static attribute
    // on DateTimeFormatter.ISO_WEEK_DATE
    System.out.println(specificDateTime.format(DateTimeFormatter.ISO_WEEK_DATE));

    // Create a patterned formatter using default Locale and print time
    dformatter = DateTimeFormatter.ofPattern("hh:mm:ss:nn a");
    System.out.println(dformatter.format(LocalTime.of(12, 30)));
    System.out.println(dformatter.format(LocalTime.of(0, 30)));
    System.out.println(dformatter.format(specificDateTime));

    // Print LocalTimeDate using predefined formatter, static attribute
    // on DateTimeFormatter.ISO_LOCAL_DATE_TIME
    dformatter = DateTimeFormatter.ISO_LOCAL_DATE_TIME;
    System.out.println(dformatter.format(specificDateTime));

    // Print LocalTimeDate using predefined formatter, static attribute
    // on DateTimeFormatter.ISO_LOCAL_DATE
    dformatter = DateTimeFormatter.ISO_LOCAL_DATE;
    System.out.println(dformatter.format(specificDateTime));

}


****************************************
snippet-06-LocaleFormattingDateTime.java
****************************************


creatingDateTimeVariables( date);

