************************************
snippet-24-SerializationExample.java
************************************


/*
        // Use try with resources (automatically closes file) to output
        // the Pet object
        try (ObjectOutputStream outputStream = new ObjectOutputStream(
                new FileOutputStream(fileName))) {
            // write the Pet to a file
            outputStream.writeObject(originalPet);
        }
        
 */


************************************
snippet-25-SerializationExample.java
************************************


Pet.count = 55;


************************************
snippet-26-SerializationExample.java
************************************


class Pet extends Animal implements Externalizable {


************************************
snippet-27-SerializationExample.java
************************************


public void writeExternal(ObjectOutput out) throws IOException {

}

public void readExternal(ObjectInput in) throws IOException,
        ClassNotFoundException {

}


************************************
snippet-28-SerializationExample.java
************************************


// Manually write the code to output what you want..
public void writeExternal(ObjectOutput out) throws IOException {
    System.out.println("writeExternal");
    out.writeObject(name);
    out.writeObject(breed);
    out.write(age);

}
// Manually write the code to input same data
public void readExternal(ObjectInput in) throws IOException,
        ClassNotFoundException {
    System.out.println("readExternal");
    name = (String) in.readObject();
    breed = (String) in.readObject();
    age = in.read();
}


************************************
snippet-29-SerializationExample.java
************************************


try (ObjectOutputStream outputStream = new ObjectOutputStream(
        new FileOutputStream(fileName))) {
    // write the Pet to a file
    outputStream.writeObject(originalPet);
}


************************************
snippet-30-SerializationExample.java
************************************


// No arguments constructor
 public Pet() {
    System.out.println("Inside no args Pet constructor");
}

